/**
 * An√°lisis de costos de Neon para el sistema de recordatorios autom√°ticos
 * Basado en precios de Neon (Septiembre 2025)
 */

// PRECIOS DE NEON (USD)
const NEON_PRICING = {
  // Plan Free
  free: {
    storage: { limit: '512 MB', cost: 0 },
    compute: { limit: '191.7 horas/mes', cost: 0 },
    branches: { limit: 1, cost: 0 }
  },
  
  // Plan Launch ($19/mes)
  launch: {
    storage: { limit: '10 GB', cost: 19, additionalPerGB: 0.15 },
    compute: { limit: '191.7 horas/mes', cost: 19, additionalPerHour: 0.16 },
    branches: { limit: 3, cost: 19 }
  },
  
  // Plan Scale ($69/mes)
  scale: {
    storage: { limit: '50 GB', cost: 69, additionalPerGB: 0.15 },
    compute: { limit: '750 horas/mes', cost: 69, additionalPerHour: 0.16 },
    branches: { limit: 10, cost: 69 }
  }
};

// CONFIGURACI√ìN ACTUAL DEL SISTEMA
const SYSTEM_CONFIG = {
  reminderInterval: 10, // minutos
  queriesPerCheck: 3, // recordatorios 24h, 1h, y limpieza
  avgQueryTime: 0.002, // 2ms por consulta (estimado)
  hoursPerDay: 24,
  daysPerMonth: 30
};

// C√ÅLCULOS DE USO
function calculateUsage() {
  const checksPerHour = 60 / SYSTEM_CONFIG.reminderInterval;
  const checksPerDay = checksPerHour * SYSTEM_CONFIG.hoursPerDay;
  const checksPerMonth = checksPerDay * SYSTEM_CONFIG.daysPerMonth;
  
  const queriesPerMonth = checksPerMonth * SYSTEM_CONFIG.queriesPerCheck;
  const computeTimePerMonth = (queriesPerMonth * SYSTEM_CONFIG.avgQueryTime) / 3600; // convertir a horas
  
  return {
    checksPerHour,
    checksPerDay,
    checksPerMonth,
    queriesPerMonth,
    computeTimePerMonth
  };
}

// AN√ÅLISIS DE COSTOS
function analyzeCosts() {
  const usage = calculateUsage();
  
  console.log('='.repeat(60));
  console.log('üìä AN√ÅLISIS DE COSTOS NEON - SISTEMA DE RECORDATORIOS');
  console.log('='.repeat(60));
  
  console.log('\nüîÑ USO DEL SISTEMA:');
  console.log(`‚Ä¢ Verificaciones por hora: ${usage.checksPerHour}`);
  console.log(`‚Ä¢ Verificaciones por d√≠a: ${usage.checksPerDay}`);
  console.log(`‚Ä¢ Verificaciones por mes: ${usage.checksPerMonth.toLocaleString()}`);
  console.log(`‚Ä¢ Consultas SQL por mes: ${usage.queriesPerMonth.toLocaleString()}`);
  console.log(`‚Ä¢ Tiempo de c√≥mputo por mes: ${usage.computeTimePerMonth.toFixed(4)} horas`);
  
  console.log('\nüí∞ AN√ÅLISIS DE COSTOS POR PLAN:');
  
  // Plan Free
  console.log('\nüÜì PLAN FREE ($0/mes):');
  if (usage.computeTimePerMonth <= 191.7) {
    console.log(`‚úÖ C√≥mputo: ${usage.computeTimePerMonth.toFixed(4)}h / 191.7h l√≠mite`);
    console.log('‚úÖ COSTO ADICIONAL: $0 USD');
    console.log('‚úÖ Tu sistema autom√°tico NO genera costos adicionales');
  } else {
    const excessHours = usage.computeTimePerMonth - 191.7;
    console.log(`‚ùå C√≥mputo: ${usage.computeTimePerMonth.toFixed(4)}h (excede por ${excessHours.toFixed(4)}h)`);
    console.log('‚ùå Plan Free insuficiente');
  }
  
  // Plan Launch
  console.log('\nüöÄ PLAN LAUNCH ($19/mes):');
  if (usage.computeTimePerMonth <= 191.7) {
    console.log(`‚úÖ C√≥mputo: ${usage.computeTimePerMonth.toFixed(4)}h / 191.7h l√≠mite`);
    console.log('‚úÖ COSTO ADICIONAL: $0 USD');
    console.log('üíµ COSTO TOTAL: $19 USD/mes');
  } else {
    const excessHours = usage.computeTimePerMonth - 191.7;
    const additionalCost = excessHours * 0.16;
    console.log(`‚ö†Ô∏è C√≥mputo: ${usage.computeTimePerMonth.toFixed(4)}h (excede por ${excessHours.toFixed(4)}h)`);
    console.log(`üíµ Costo adicional: $${additionalCost.toFixed(4)} USD`);
    console.log(`üíµ COSTO TOTAL: $${(19 + additionalCost).toFixed(2)} USD/mes`);
  }
  
  // Estimaci√≥n de almacenamiento t√≠pico
  console.log('\nüíæ ESTIMACI√ìN DE ALMACENAMIENTO:');
  console.log('‚Ä¢ Base de datos t√≠pica con 100 citas/mes: ~5-10 MB');
  console.log('‚Ä¢ Con logs del sistema: ~20-50 MB');
  console.log('‚úÖ Bien dentro de los l√≠mites de cualquier plan');
  
  console.log('\nüéØ RECOMENDACIONES:');
  console.log('‚Ä¢ Para uso b√°sico: Plan FREE es suficiente');
  console.log('‚Ä¢ Para cl√≠nicas grandes: Plan LAUNCH ($19/mes) es m√°s que suficiente');
  console.log('‚Ä¢ El sistema de recordatorios usa recursos M√çNIMOS');
  
  return usage;
}

// OPTIMIZACIONES SUGERIDAS
function suggestOptimizations() {
  console.log('\n‚ö° OPCIONES PARA REDUCIR COSTOS A√öN M√ÅS:');
  
  // Opci√≥n 1: Intervalo m√°s largo
  const optimized30min = calculateOptimizedUsage(30);
  console.log('\n1Ô∏è‚É£ CAMBIAR INTERVALO A 30 MINUTOS:');
  console.log(`‚Ä¢ Verificaciones por mes: ${optimized30min.checksPerMonth.toLocaleString()}`);
  console.log(`‚Ä¢ Tiempo de c√≥mputo: ${optimized30min.computeTimePerMonth.toFixed(4)} horas/mes`);
  console.log(`‚Ä¢ Reducci√≥n: ${((1 - optimized30min.computeTimePerMonth / calculateUsage().computeTimePerMonth) * 100).toFixed(1)}%`);
  
  // Opci√≥n 2: Consultas inteligentes
  console.log('\n2Ô∏è‚É£ CONSULTAS INTELIGENTES (solo cuando hay citas):');
  console.log('‚Ä¢ Verificar primero si hay citas en pr√≥ximas 25 horas');
  console.log('‚Ä¢ Si no hay citas, saltar verificaci√≥n');
  console.log('‚Ä¢ Reducci√≥n estimada: 60-80% en d√≠as sin citas');
  
  // Opci√≥n 3: Cron externo
  console.log('\n3Ô∏è‚É£ USAR VERCEL CRON (RECOMENDADO):');
  console.log('‚Ä¢ Ejecutar solo 2 veces al d√≠a (10am y 6pm)');
  console.log('‚Ä¢ Verificaciones por mes: 60');
  console.log('‚Ä¢ Tiempo de c√≥mputo: ~0.0001 horas/mes');
  console.log('‚Ä¢ Reducci√≥n: >99%');
  console.log('‚Ä¢ COSTO: $0 adicional (incluido en Vercel)');
}

function calculateOptimizedUsage(intervalMinutes) {
  const checksPerHour = 60 / intervalMinutes;
  const checksPerDay = checksPerHour * 24;
  const checksPerMonth = checksPerDay * 30;
  const queriesPerMonth = checksPerMonth * 3;
  const computeTimePerMonth = (queriesPerMonth * 0.002) / 3600;
  
  return {
    checksPerHour,
    checksPerDay,
    checksPerMonth,
    queriesPerMonth,
    computeTimePerMonth
  };
}

// EJECUTAR AN√ÅLISIS
console.clear();
const usage = analyzeCosts();
suggestOptimizations();

console.log('\n' + '='.repeat(60));
console.log('üéØ CONCLUSI√ìN: Tu sistema de recordatorios usa recursos M√çNIMOS');
console.log('üí° En Plan FREE: $0 adicional');
console.log('üí° En Plan Launch: $19/mes total (sin cargos extra)');
console.log('='.repeat(60));