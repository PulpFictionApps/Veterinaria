name: ðŸš€ Deploy PWA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¦ Checkout code
      uses: actions/checkout@v4
      
    - name: ðŸŸ¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: ðŸ“± Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: ðŸ”§ Build Frontend
      working-directory: ./frontend
      run: |
        export BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_API_BASE: ${{ secrets.API_BASE_URL }}
        NEXT_PUBLIC_PWA_VERSION: ${{ github.sha }}
        
    - name: ðŸ§ª Run Tests (if available)
      working-directory: ./frontend
      run: npm run test:e2e || echo "No tests configured"
      continue-on-error: true
      
    # AquÃ­ puedes agregar tu provider de deploy (Vercel, Netlify, etc.)
    # Ejemplo para Vercel:
    # - name: ðŸš€ Deploy to Vercel
    #   uses: amondnet/vercel-action@v25
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: ./frontend
    
    - name: ðŸ“Š Generate Deployment Report
      run: |
        echo "## ðŸ“± PWA Deployment Report" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY